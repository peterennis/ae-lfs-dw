#!/bin/bash
# The proper way to start a bash script

# Ref: http://wiki.linuxfromscratch.org/alfs/browser/jhalfs/trunk/HLFS/jhahlfs?rev=2289
set -e  # Enable error trapping
set -u  # Trap undefined variables.. Forces the programmer
        # to define a variable before using it

# VT100 colors
declare -r  BLACK=$'\e[1;30m'
declare -r  DK_GRAY=$'\e[0;30m'
declare -r  RED=$'\e[31m'
declare -r  GREEN=$'\e[32m'
declare -r  YELLOW=$'\e[33m'
declare -r  BLUE=$'\e[34m'
declare -r  MAGENTA=$'\e[35m'
declare -r  CYAN=$'\e[36m'
declare -r  WHITE=$'\e[37m'
declare -r  OFF=$'\e[0m'
declare -r  BOLD=$'\e[1m'
declare -r  REVERSE=$'\e[7m'
declare -r  HIDDEN=$'\e[8m'
declare -r  tab_=$'\t'
declare -r  nl_=$'\n'

#>>>>>>>>>>>>>>>ERROR TRAPPING >>>>>>>>>>>>>>>>>>>>
#-----------------------#
simple_error() {        # Basic error trap.... JUST DIE
#-----------------------#
# If +e then disable text output
if [[ "$-" =~ "e" ]]; then
	echo -e "\n${RED}ERROR:${GREEN} basic error trapped!${OFF}\n" >&2
fi
}

see_ya() {
echo -e "\n\t${BOLD}So long and thanks for all the foo!\n${OFF}"
}
##### Simple error TRAPS
# ctrl-c   SIGINT
# ctrl-y
# ctrl-z   SIGTSTP
# SIGHUP   1 HANGUP
# SIGINT   2 INTERRUPT FROM KEYBOARD Ctrl-C
# SIGQUIT  3
# SIGKILL  9 KILL
# SIGTERM 15 TERMINATION
# SIGSTOP 17,18,23 STOP THE PROCESS
#####
set -e
trap see_ya 0
trap simple_error ERR
trap 'echo -e "\n\n${RED}INTERRUPT${OFF} trapped\n" &&  exit 2'  1 2 3 15 17 18 23
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

echo
echo _________________________________________________________________________________
echo $0
echo =ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae
echo =ae{ As root, issue the following commands to add the new user:
echo =ae{ \(login shell used to find groupadd command\)
echo "    " sudo su -
echo "    " groupadd lfs
echo "    " useradd -s /bin/bash -g lfs -m -k /dev/null lfs
echo =ae{ Give lfs a password:
echo "    " passwd lfs
echo =ae{ Make sure \$LFS variable is set in the root shell:
echo "    " echo \$LFS
echo "    " sudo export LFS=/mnt/lfs
echo echo $LFS
echo =ae{ Grant lfs full access to $LFS/tools by making lfs the directory owner:
echo "    " sudo chown lfs \$LFS/tools
echo =ae{ Give user lfs ownership of the directories:
echo "    " sudo chown lfs $LFS/sources
echo "    " sudo chown lfs $LFS/lfs-logs
echo "    " sudo chown lfs $LFS/lfs-scripts
echo =ae{ Login as user lfs with login shell
echo "    " sudo su - lfs
echo "    " pwd
echo =ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae
echo

#sudo su -

GROUP=lfs
USER=lfs

# Check if named group exists
if [ -z "`grep $GROUP /etc/group`" ] 
then
	#echo "Creating group $GROUP:"
	sudo /usr/sbin/groupadd $GROUP
else
	echo "WARNING: Group $GROUP already exists. Will not create it."
fi

# Check if user exists
if [ -z "`grep $USER /etc/passwd`" ] 
then
	#echo "Creating user $USER:"
	sudo /usr/sbin/useradd -s /bin/bash -g lfs -m -k /dev/null $USER
	sudo passwd $USER
else
	echo "WARNING: User  $USER already exists. Will not create it."
fi

echo $LFS
export LFS=/mnt/lfs
echo $LFS
sudo chown lfs $LFS/tools
echo "    " completed: sudo chown lfs \$LFS/tools
sudo chown lfs $LFS/sources
echo "    " completed: sudo chown lfs \$LFS/sources
sudo chown lfs $LFS/lfs-logs
echo "    " completed: sudo chown lfs \$LFS/lfs-logs
sudo chown lfs $LFS/lfs-scripts
echo "    " completed: sudo chown lfs \$LFS/lfs-scripts
echo =DONE - Changing to lfs user
sudo su - lfs
