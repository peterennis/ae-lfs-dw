ERRORS FOUND WITH REPEAT BUILD PROCESS
======================================

5.15.Bzip2
==========
cp -f bzgrep /tools/bin/bzgrep
ln /tools/bin/bzgrep /tools/bin/bzegrep
ln: creating hard link `/tools/bin/bzegrep' to `/tools/bin/bzgrep': File exists
make: *** [install] Error 1
./5.15.Bzip2 ERROR: basic error trapped!

Exit Status $?=2

        So long and thanks for all the foo!

Fix:
---
make
# Fix error caused by repeating script when hard link already exists
sed -i[original] -e 's/ln \$.PREFIX./ln -f $(PREFIX)/g' Makefile
make PREFIX=/tools install

5.26.Perl
=========
`lib/re.pm' -> `/tools/lib/perl5/5.8.8/re.pm'
cp: cannot create regular file `/tools/lib/perl5/5.8.8/re.pm': Permission denied
./5.26.Perl ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

Fix:
----
# http://linuxfromscratch.org/pipermail/lfs-support/2005-July/027751.html
# Some files are installed read only. For repeating the script you need to:
rm -rf /tools/lib/perl5

5.07.Adjusting_The_Toolchain - Second Pass
==========================================
=> ldadjusted=/tools/bin/ld-5.07.Adjusting_The_Toolchain
=> The file /tools/bin/ld-5.07.Adjusting_The_Toolchain exists.
=> The breakpoint is included because the file exists.
=> link=/tools/i686-pc-linux-gnu/bin/ld
-rwxr-xr-x 2 lfs lfs 2838110 Jul  2 07:13 /tools/i686-pc-linux-gnu/bin/ld
./5.07.Adjusting_The_Toolchain ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

./_Ch5_Build ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

lfs:~/lfs-scripts$ vi 5.07*
lfs:~/lfs-scripts$ /tools/$(gcc -dumpmachine)/bin/ld
/tools/i686-pc-linux-gnu/bin/ld: no input files
lfs:~/lfs-scripts$

Fix:
----
ldadjusted=/tools/bin/ld-5.07.Adjusting_The_Toolchain
echo "=> ldadjusted="${ldadjusted}
if [[ -e ${ldadjusted} ]] ; then
        echo "=> The file "${ldadjusted}" exists."
        echo "=> The breakpoint is included because the file exists."
        rm /tools/bin/ld
        rm /tools/$(gcc -dumpmachine)/bin/ld
        cp -uv /tools/bin/ld-5.03.Binutils /tools/bin/ld
        ln -sv /tools/bin/ld /tools/$(gcc -dumpmachine)/bin/ld
        echo "=> "`ls -l /tools/bin/ld`
        echo "=> "`ls -l /tools/$(gcc -dumpmachine)/bin/ld`

        SPECFILE=`dirname $(gcc -print-libgcc-file-name)`/specs &&
        gcc -dumpspecs > $SPECFILE &&
        sed 's@^/lib/ld-linux.so.2@/tools&@g' $SPECFILE > tempspecfile &&
        mv -vf tempspecfile $SPECFILE &&
        unset SPECFILE

        GCC_INCLUDEDIR=`dirname $(gcc -print-libgcc-file-name)`/include &&
        find ${GCC_INCLUDEDIR}/* -maxdepth 0 -xtype d -exec rm -rvf '{}' \; &&
        rm -vf `grep -l "DO NOT EDIT THIS FILE" ${GCC_INCLUDEDIR}/*` &&
        unset GCC_INCLUDEDIR

6.12.GCC
========
make[2]: Leaving directory `/gcc-build/i686-pc-linux-gnu/libiberty/testsuite'
make[1]: Leaving directory `/gcc-build/i686-pc-linux-gnu/libiberty'
make: Target `check' not remade because of errors.
./6.12.GCC ERROR: basic error trapped!

Exit Status $?=2

        So long and thanks for all the foo!

Fix:
----
http://gcc.gnu.org/ml/gcc/2003-02/msg01639.html
This is normal when there are some tests that fail.  Use "make -k check"
so that make will ignore errors.

NOTE: -k option is used already

From man make:
       -i   Ignore all errors in commands executed to remake files.

       -k   Continue as much as possible after an error.  While the target that failed, and those  that  depend  on  it,
            cannot be remade, the other dependencies of these targets can be processed all the same.

6.12.GCC
========
make[1]: Leaving directory `/gcc-build/i686-pc-linux-gnu/libiberty'
create symbolic link `/lib/cpp' to `../usr/bin/cpp'
ln: creating symbolic link `/lib/cpp' to `../usr/bin/cpp': File exists
./6.12.GCC ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

Fix:
----
link=/usr/bin/cc
echo "=> link="${link}
if [[ -L $link ]] ; then
        echo "=> The link "${link}" exists."
        echo "=> The breakpoint is included because the link exists."
        ls -l ${link}
else
        ln -sv ../usr/bin/cpp /lib
        ln -sv gcc /usr/bin/cc
fi

6.11.Binutils (On SMP Server)
=============================

                === binutils Summary ===

# of unexpected failures        2
# of unresolved testcases       4
make[3]: *** [check-DEJAGNU] Error 1
make[3]: Leaving directory `/binutils-build/binutils'
make[2]: *** [check-am] Error 2
make[2]: Leaving directory `/binutils-build/binutils'
make[1]: *** [check-recursive] Error 1
make[1]: Leaving directory `/binutils-build/binutils'
make: *** [check-binutils] Error 2
./6.11.Binutils ERROR: basic error trapped!

Exit Status $?=2

        So long and thanks for all the foo!

Fix:
----
make -k check

6.11.Binutils (On SMP Server)
=============================
Running /binutils-2.16.1/gas/testsuite/gas/all/gas.exp ...
ERROR: Can't run gas/all/comment.s: The system has no more ptys.  Ask your system administrator to create more.got a INT signal, interrupted by user

                === gas Summary ===

# of expected passes            5
../as-new 2.16.1

Fix:
----
expect -c "spawn ls"

was commented out!

Also the "no more ptys" was probably due to constant
rerunning of the scripts and the mount tests not
complete. This was fixed in 6.02*, the system
rebooted and it worked.

The error occurred still so mount --bind is checked for
explicitly so that it is run only once

devmounted="/dev on $LFS/dev"
devbindmounted="/dev on $LFS/dev type none (rw,bind)"
echo "=> devmounted="${devmounted}
mountedtest=`sudo mount`
if echo "${mountedtest}" | grep -q "${devmounted}" ; then
        echo "=> \"${devmounted}\" found in sudo mount"
        echo "=> /dev is mounted on $LFS/dev"
        if echo "${mountedtest}" | grep -q "${devbindmounted}" ; then
                echo "=> \"${devbindmounted}\" found in sudo mount"
                echo "=> --bind /dev is mounted on $LFS/dev"
        else
                echo "=> \"${devbindmounted}\" NOT found in sudo mount"
                sudo mount --bind /dev $LFS/dev
        fi
else
        echo "=> \"${devmounted}\" NOT found in sudo mount"
        sudo mount --bind /dev $LFS/dev
fi

6.14.Coreutils
==============
`/usr/bin/mv' -> `/bin/mv'
`/usr/bin/pwd' -> `/bin/pwd'
`/usr/bin/rm' -> `/bin/rm'
./6.14.Coreutils: line 61: /usr/bin/mv: No such file or directory
./6.14.Coreutils ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

Fix:
----
Don't know. Rerun and it worked. This is something
to watch out for on future full runs.

NOTE: Same error on FC5 SMP, so test with following as the fix:

mv -v /usr/bin/{cat,chgrp,chmod,chown,cp,date,dd,df,echo} /bin
cp -v /usr/bin/mv /bin
echo "=> CHECK ON REMOVING mv"
mv -v /usr/bin/{false,hostname,ln,ls,mkdir,mknod,pwd,rm} /bin
echo "=> env="`env`

6.23.Readline
=============
readline-5.1 gz
cp: missing destination file operand after `/sources/readline-5.1-fixes-3.patch'
Try `cp --help' for more information.
./6.23.Readline ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

Fix:
----
Missing period for destination on cp command

6.06.Creating_Essential_Files_And_Symlinks
==========================================
create symbolic link `/bin/bash' to `/tools/bin/bash'
ln: creating symbolic link `/bin/bash' to `/tools/bin/bash': File exists
create symbolic link `/bin/cat' to `/tools/bin/cat'
ln: creating symbolic link `/bin/cat' to `/tools/bin/cat': File exists
create symbolic link `/bin/grep' to `/tools/bin/grep'
ln: creating symbolic link `/bin/grep' to `/tools/bin/grep': File exists
create symbolic link `/bin/pwd' to `/tools/bin/pwd'
ln: creating symbolic link `/bin/pwd' to `/tools/bin/pwd': File exists
create symbolic link `/bin/stty' to `/tools/bin/stty'
ln: creating symbolic link `/bin/stty' to `/tools/bin/stty': File exists
./6.06.Creating_Essential_Files_And_Symlinks ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

Fix:
----
The error is because bash is installed so the test for a link in
the script will now fail. Change the test to check instead
for the existence of /bin/bash

6.28.Bzip2
==========
`bzip2-shared' -> `/bin/bzip2'
`libbz2.so.1.0' -> `/lib/libbz2.so.1.0'
`libbz2.so.1.0.3' -> `/lib/libbz2.so.1.0.3'
create symbolic link `/usr/lib/libbz2.so' to `../../lib/libbz2.so.1.0'
ln: creating symbolic link `/usr/lib/libbz2.so' to `../../lib/libbz2.so.1.0': File exists
./6.28.Bzip2 ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

Fix:
----

6.30.E2fsprogs
==============
mkdir: cannot create directory `build': File exists
./6.30.E2fsprogs ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

Fix:
----
mkdir -pv build

6.33.Flex
=========
make[1]: Leaving directory `/flex-2.5.33'
create symbolic link `/usr/lib/libl.a' to `libfl.a'
ln: creating symbolic link `/usr/lib/libl.a' to `libfl.a': File exists
./6.33.Flex ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

Fix:
----
ln -svf libfl.a /usr/lib/libl.a

6.34.GRUB
=========
make[1]: Leaving directory `/grub-0.97'
mkdir: cannot create directory `/boot/grub': File exists
./6.34.GRUB ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

Fix:
----
mkdir -pv

6.38.Groff
==========
make[1]: Leaving directory `/groff-1.18.1.1'
create symbolic link `/usr/bin/geqn' to `eqn'
ln: creating symbolic link `/usr/bin/geqn' to `eqn': File exists
./6.38.Groff ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

Fix:
====
ln -svf eqn /usr/bin/geqn
ln -svf tbl /usr/bin/gtbl

6.38.Groff
==========
encoding.cc:879: error: redefinition of 'int make_wchar(int)'
encoding.cc:438: error: 'int make_wchar(int)' previously defined here
make[2]: *** [encoding.o] Error 1
make[2]: Leaving directory `/groff-1.18.1.1/src/libs/libgroff'
make[1]: *** [src/libs/libgroff] Error 2
make[1]: Leaving directory `/groff-1.18.1.1'
make: *** [all] Error 2
./6.38.Groff ERROR: basic error trapped!

Exit Status $?=2

        So long and thanks for all the foo!

Fix:
----

6.39.Gzip
=========
make[1]: Leaving directory `/gzip-1.3.5'
`/usr/bin/gzip' -> `/bin/gzip'
removed `/usr/bin/gunzip'
removed `/usr/bin/zcat'
create symbolic link `/bin/gunzip' to `gzip'
ln: creating symbolic link `/bin/gunzip' to `gzip': File exists
./6.39.Gzip ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

Fix:
----
ln -svf gzip /bin/gunzip
ln -svf gzip /bin/zcat
ln -svf gzip /bin/compress
ln -svf gunzip /bin/uncompress

6.50.Shadow
===========
make[1]: Leaving directory `/shadow-4.0.15'
`etc/limits' -> `/etc/limits'
`etc/login.access' -> `/etc/login.access'
mv: cannot stat `/usr/bin/passwd': No such file or directory
./6.50.Shadow ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

Fix:
----
make install (this was missing!)

6.50.Shadow
===========
`/lib/libshadow.a' -> `/usr/lib/libshadow.a'
`/lib/libshadow.la' -> `/usr/lib/libshadow.la'
removed `/lib/libshadow.so'
create symbolic link `/usr/lib/libshadow.so' to `../../lib/libshadow.so.0'
mkdir: cannot create directory `/etc/default': File exists
./6.50.Shadow ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

Fix:
----
mkdir -pv /etc/default

6.57.Vim
========
make[1]: Leaving directory `/vim70/src'
create symbolic link `/usr/bin/vi' to `vim'
ln: creating symbolic link `/usr/bin/vi' to `vim': File exists
./6.57.Vim ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

Fix:
----
ln -svf vim /usr/bin/vi
ln -svf vim.1 /usr/share/man/man1/vi.1
ln -svf ../vim/${PkgDir}/doc /usr/share/doc/${PkgName}

6.02.Preparing_Virtual_Kernel_File_Systems
==========================================
=> devptsmounted=devpts on /mnt/lfs/dev/pts type devpts (rw)
=> "devpts on /mnt/lfs/dev/pts type devpts (rw)" not found in sudo mount
mount: mount point /mnt/lfs/dev/pts does not exist
./6.02.Preparing_Virtual_Kernel_File_Systems ERROR: basic error trapped!

Exit Status $?=32

        So long and thanks for all the foo!

Fix:
----
Make sure mount --bind is used:

Use fix documented for 6.11 no more ptys

6.11.Binutils
=============
make[3]: Leaving directory `/binutils-build/ld'
make[2]: Leaving directory `/binutils-build/ld'
make[1]: Leaving directory `/binutils-build/ld'
make[1]: Entering directory `/binutils-build/libiberty'
make[2]: Entering directory `/binutils-build/libiberty/testsuite'
gcc -DHAVE_CONFIG_H -g -O2  -I.. -I../../../binutils-2.16.1/libiberty/testsuite/../../include  -o test-demangle \
        ../../../binutils-2.16.1/libiberty/testsuite/test-demangle.c ../libiberty.a
./test-demangle < ../../../binutils-2.16.1/libiberty/testsuite/demangle-expected
./test-demangle: 746 tests, 0 failures
make[2]: Leaving directory `/binutils-build/libiberty/testsuite'
make[1]: Leaving directory `/binutils-build/libiberty'
make: Target `check' not remade because of errors.
./6.11.Binutils ERROR: basic error trapped!

Exit Status $?=2

        So long and thanks for all the foo!

Fix:
----
make -i -k check

6.11.Binutils
=============
binutils-2.16.1/md5.sum
/binutils-2.16.1
----------8<----------8<----------8<----------8<----------8<----------8<----------
=> ./6.11.Binutils TERM=xterm OLDPWD=/ PATH=/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin PWD=/binutils-2.16.1 HOME=/root SHLVL=1
mkdir: cannot create directory `../binutils-build': File exists
./6.11.Binutils ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

Fix:
----
mkdir -pv ../binutils-build

2.4.Mounting_The_New_Partition
==============================
 proc on /mnt/lfs/sys type proc (rw) sysfs on /mnt/lfs/sys type sysfs (rw)
=> "/dev/hdb1 on /mnt/lfs type ext3 (rw)" found in sudo mount
=> lfs is mounted on /mnt/lfs
---------->8---------->8---------->8---------->8---------->8---------->8----------
Filesystem            Size  Used Avail Use% Mounted on
/dev/hda3              12G  4.1G  6.7G  38% /
/dev/hda1              99M   13M   81M  14% /boot
/dev/hdb2             9.5G  927M  8.1G  11% /home
/dev/hdb3              18G  386M   16G   3% /opt
/dev/hdb1             9.7G  859M  8.3G  10% /mnt/lfs
df: `/mnt/lfs/dev/pts': No such file or directory
df: `/mnt/lfs/dev/shm': No such file or directory
./2.4.Mounting_The_New_Partition ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

Fix:
----
This error happened after removing multiple entries of
/dev on $LFS/dev type none (rw,bind)

Remove the df -h command

6.26.Automake
=============
PASS: yaccpp.test
PASS: yaccvpath.test
=====================================
2 of 531 tests failed
(36 tests were not run)
Please report to bug-automake@gnu.org
=====================================
make[2]: *** [check-TESTS] Error 1
make[2]: Leaving directory `/automake-1.9.6/tests'
make[1]: *** [check-am] Error 2
make[1]: Leaving directory `/automake-1.9.6/tests'
make: *** [check-recursive] Error 1
./6.26.Automake ERROR: basic error trapped!

Exit Status $?=2

        So long and thanks for all the foo!

Fix:
----
make -i -k check

2.4.Mounting_The_New_Partition
==============================
=> ./2.4.Mounting_The_New_Partition TERM=xterm LC_ALL=POSIX LFS=/mnt/lfs PATH=/tools/bin:/bin:/usr/bin PWD=/home/lfs/lfs-scripts HOME=/home/lfs SHLVL=3
=> lfsmounted=/dev/hdc1 on /mnt/lfs type ext3 (rw)
=> lfsmountedtest=/dev/hda2 on / type ext3 (rw) none on /proc type proc (rw) none on /dev/pts type devpts (rw,gid=5,mode=620) /dev/hda1 on /boot type ext3 (rw) /dev/hda5 on /usr type ext3 (rw) none on /proc/sys/fs/binfmt_misc type binfmt_misc (rw) sunrpc on /var/lib/nfs/rpc_pipefs type rpc_pipefs (rw) automount(pid31096) on /net type autofs (rw,fd=4,pgrp=31096,minproto=2,maxproto=4)
=> "/dev/hdc1 on /mnt/lfs type ext3 (rw)" not found in sudo mount
=> mounting lfs on /mnt/lfs
mount: mount point /mnt/lfs does not exist
./2.4.Mounting_The_New_Partition ERROR: basic error trapped!

Exit Status $?=32

        So long and thanks for all the foo!

Fix:
----
This error is because the /mnt/lfs dir is not created
export LFS=/mnt/lfs
sudo mkdir -pv ${LFS}

5.02.Toolchain_Technical_Notes
==============================
GNU assembler version 2.16.1 (i686-pc-linux-gnu) using BFD version 2.16.1
 /mnt/lfs/tools/bin/../libexec/gcc/i686-pc-linux-gnu/4.0.3/collect2 --eh-frame-hdr -m elf_i386 -dynamic-linker /lib/ld-linux.so.2 /usr/lib/crt1.o /usr/lib/crti.o /mnt/lfs/tools/bin/../lib/gcc/i686-pc-linux-gnu/4.0.3/crtbegin.o -L/mnt/lfs/tools/bin/../lib/gcc/i686-pc-linux-gnu/4.0.3 -L/mnt/lfs/tools/bin/../lib/gcc -L/tools/lib/gcc/i686-pc-linux-gnu/4.0.3 -L/mnt/lfs/tools/bin/../lib/gcc/i686-pc-linux-gnu/4.0.3/../../../../i686-pc-linux-gnu/lib -L/tools/lib/gcc/i686-pc-linux-gnu/4.0.3/../../../../i686-pc-linux-gnu/lib /tmp/ccQlQPSR.o -lgcc --as-needed -lgcc_s --no-as-needed -lc -lgcc --as-needed -lgcc_s --no-as-needed /mnt/lfs/tools/bin/../lib/gcc/i686-pc-linux-gnu/4.0.3/crtend.o /usr/lib/crtn.o
/mnt/lfs/tools/bin/../lib/gcc/i686-pc-linux-gnu/4.0.3/../../../../i686-pc-linux-gnu/bin/ld: cannot find -lgcc_s
collect2: ld returned 1 exit status
./5.02.Toolchain_Technical_Notes ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

./_Ch5_Build ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

Fix:
----
NOTE: This happened after unmounting /dev/hdb1 with -l
then rm -rf lfs in /mnt and sudo umount the
incorrect mounts from running df -h
So it seems the mount code is not working
correctly.
This may need to be a requrement to check
at the start of the build and not try
to fix in the script.
NOTE: Checking df -h before running again and
it shows /dev/hdb1 mounted at /mnt/lfs
so need to investigate further.

lfs:~/lfs-scripts$ ls -l /tools/bin/cc
lrwxrwxrwx 1 lfs lfs 3 Jul 28 22:22 /tools/bin/cc -> gcc
lfs:~/lfs-scripts$

NOTE: This shows that the previous build files
are still around, so this will be the Ch6 files
hence the rebuild from scratch is not really
from scratch :(

NOTE: The real fix is to make sure the dummy.c program
exists before testing it!

echo "=> echo 'main(){}' > dummy.c"
echo "=> gcc dummy.c -Wl,--verbose 2>&1 | grep succeeded"
echo 'main(){}' > dummy.c
gcc dummy.c -Wl,--verbose 2>&1 | grep succeeded

6.02.Preparing_Virtual_Kernel_File_Systems
==========================================
=> ${devmounted}=/dev on /mnt/lfs/dev
=> "/dev on /mnt/lfs/dev" found in sudo mount
=> /dev is mounted on /mnt/lfs/dev
=> "/dev on /mnt/lfs/dev type none (rw,bind)" found in sudo mount
=> --bind /dev is mounted on /mnt/lfs/dev
=> ${devptsmounted}=devpts on /mnt/lfs/dev/pts type devpts (rw)
=> "devpts on /mnt/lfs/dev/pts type devpts (rw)" NOT found in sudo mount
mount: mount point /mnt/lfs/dev/pts does not exist
./6.02.Preparing_Virtual_Kernel_File_Systems ERROR: basic error trapped!

Exit Status $?=32

        So long and thanks for all the foo!

Fix:
----
NOTE: Rerun mount --bind and then it worked, so
some setup problem. 
Should improve the environment check tests.

2.4.Mounting_The_New_Partition
==============================
=> "/dev/hdb1 on /mnt/lfs type ext3 (rw)" not found in sudo mount
=> mounting lfs on /mnt/lfs
mount: special device /dev/hdb1 does not exist
./2.4.Mounting_The_New_Partition ERROR: basic error trapped!

Exit Status $?=32

        So long and thanks for all the foo!

Fix:
----
NOTE: bash: /dev/null permission denied errors in other terminal
When close it and open again then:
"There was an error creating the child process for this terminal"
in FC5. This is somehow caused by unmounting all the /mnt/lfs...
locations, removing all files from lfs, unmounting /mnt/lfs
and not having anything showing in /dev/hdb1 when using df -h
???
Reboot fixed it last time.

lfs:/mnt/lfs$ sudo mount -afv -t ext3 /dev/hdb1 ${LFS}

This made it work, but the file system shows 38%
usage even though the files were deleted.

Filesystem            Size  Used Avail Use% Mounted on
/dev/hda3              12G  4.1G  6.7G  38% /
/dev/hda1              99M   13M   81M  14% /boot
tmpfs                 252M     0  252M   0% /dev/shm
/dev/hdb2             9.5G  950M  8.1G  11% /home
/dev/hdb3              18G  386M   16G   3% /opt
/dev/hdb1              12G  4.1G  6.7G  38% /mnt/lfs

lfs:~/lfs-scripts$ svn commit * -m "6.2"
Couldn't open /dev/null: Permission deniedsvn: Commit failed (details follow):
svn: Connection closed unexpectedly
lfs:~/lfs-scripts$

NOTE: Same /dev/null problem, so reboot!

After reboot the /dev/hdb1 disk status is correct:

lfs:~/lfs-scripts$ df -h
Filesystem            Size  Used Avail Use% Mounted on
/dev/hda3              12G  4.1G  6.7G  38% /
/dev/hda1              99M   13M   81M  14% /boot
tmpfs                 252M     0  252M   0% /dev/shm
/dev/hdb2             9.5G  950M  8.1G  11% /home
/dev/hdb1             9.7G  151M  9.0G   2% /mnt/lfs
/dev/hdb3              18G  386M   16G   3% /opt
lfs:~/lfs-scripts$

6.18.Ncurses
============
** Building terminfo database, please wait...
Running tic to install /usr/share/terminfo ...

        You may see messages regarding extended capabilities, e.g., AX.
        These are extended terminal capabilities which are compiled
        using
                tic -x
        If you have ncurses 4.2 applications, you should read the INSTALL
        document, and install the terminfo without the -x option.

tic: error while loading shared libraries: libncursesw.so.5: cannot open shared object file: No such file or directory
? tic could not build /usr/share/terminfo
make[1]: *** [install.data] Error 1
make[1]: Leaving directory `/ncurses-5.5/misc'
make: *** [install] Error 2
./6.18.Ncurses ERROR: basic error trapped!

Exit Status $?=2

        So long and thanks for all the foo!

Fix:
----
make[1]: Leaving directory `/ncurses-5.5/test'
cd misc && make DESTDIR="" install
make[1]: Entering directory `/ncurses-5.5/misc'
DESTDIR= \
prefix=/usr \
exec_prefix=/usr \
bindir=/usr/bin \
top_srcdir=.. \
srcdir=. \
datadir=/usr/share \
ticdir=/usr/share/terminfo \
source=terminfo.tmp \
THIS_CC="gcc" \
THAT_CC="gcc" \
sh ./run_tic.sh
** Building terminfo database, please wait...
Running tic to install /usr/share/terminfo ...

        You may see messages regarding extended capabilities, e.g., AX.
        These are extended terminal capabilities which are compiled
        using
                tic -x
        If you have ncurses 4.2 applications, you should read the INSTALL
        document, and install the terminfo without the -x option.

tic: error while loading shared libraries: libncursesw.so.5: cannot open shared object file: No such file or directory
? tic could not build /usr/share/terminfo
=> $SHLIB=sh ./shlib
=> $suffix=
=> $TERMINFO=/usr/share/terminfo
=> $source=terminfo.tmp
=> Fail Test 1
make[1]: *** [install.data] Error 1
make[1]: Leaving directory `/ncurses-5.5/misc'
make: *** [install] Error 2
root:/ncurses-5.5#

NOTE: Error happens in /ncurses-5.5/misc/run_tic.sh here:
--------8<--------
if ( $SHLIB tic$suffix -x -s -o $TERMINFO $source )
then
        echo '** built new '$TERMINFO
else
        echo '? tic could not build '$TERMINFO
        echo "=> \$SHLIB="$SHLIB
        echo "=> \$suffix="$suffix
        echo "=> \$TERMINFO="$TERMINFO
        echo "=> \$source="$source
        echo "=> Fail Test 1"
        exit 1
fi
-------->8--------

NOTE: Test the command outside of the script

root:/ncurses-5.5#  $SHLIB tic$suffix -x -s -o $TERMINFO $source
tic: error while loading shared libraries: libncursesw.so.5: cannot open shared object file: No such file or directory
root:/ncurses-5.5#

lfs:/mnt/lfs/usr/share$ ls -l
total 40
drwxr-xr-x  2 root root 4096 Aug  5 09:45 aclocal
drwxr-xr-x  3 root root 4096 Aug  5 09:45 bison
drwxr-xr-x  3 root root 4096 Aug  5 08:52 doc
drwxr-xr-x  2 root root 4096 Aug  5 09:45 info
drwxr-xr-x 41 root root 4096 Aug  5 09:37 locale
drwxr-xr-x 10 root root 4096 Aug  5 08:39 man
drwxr-xr-x  2 root root 4096 Aug  5 08:39 misc
drwxr-xr-x  2 root root 4096 Aug  5 09:53 tabset
drwxr-xr-x  2 root root 4096 Aug  5 08:39 terminfo
drwxr-xr-x  2 root root 4096 Aug  5 08:39 zoneinfo
lfs:/mnt/lfs/usr/share$ cd terminfo
lfs:/mnt/lfs/usr/share/terminfo$ ls -l
total 0
lfs:/mnt/lfs/usr/share/terminfo$

lfs:/mnt/lfs/ncurses-5.5/misc$ ls -l terminfo.tmp
-rw-r--r-- 1 root root 930633 Aug  8 00:40 terminfo.tmp
lfs:/mnt/lfs/ncurses-5.5/misc$

root:/ncurses-5.5# find / -name libncursesw.so.5 -ls
find: /proc/1/task: Permission denied
...
116158    0 lrwxrwxrwx   1 root     root           18 Aug  8 16:18 /usr/lib/libncursesw.so.5 -> libncursesw.so.5.5
195912    0 lrwxrwxrwx   1 root     root           18 Aug  8 00:35 /ncurses-5.5/lib/libncursesw.so.5 -> libncursesw.so.5.5
root:/ncurses-5.5#

root:/ncurses-5.5# find / -name libncursesw.so.5.5 -ls
find: /proc/1/task: Permission denied
...
116157  340 -rw-r--r--   1 root     root       343074 Aug  8 16:18 /usr/lib/libncursesw.so.5.5
195911  340 -rwxr-xr-x   1 root     root       343074 Aug  8 00:35 /ncurses-5.5/lib/libncursesw.so.5.5
root:/ncurses-5.5#

On 8/8/06, Peter Ennis <peterennis <at> yahoo.com> wrote:
>
> I followed the debug suggestions, output attached
> with comments. I also ran the sanity check.
> It shows some succeeded and also failed messages.
> The succeeded match the book but there is no
> info about failed.

This was the failure. It's still looking in /tools/lib, and we don't
build the wide character libncursesw in Ch. 5. See below. BTW, thanks
for including the sanity check. Always helpful.

> root:/ncurses-5.5# find / -name libncursesw.so.5 -ls
> find: /proc/1/task: Permission denied
> ...
> 116158    0 lrwxrwxrwx   1 root     root           18 Aug  8 16:18 /usr/lib/libncursesw.so.5 -> libncursesw.so.5.5
> 195912    0 lrwxrwxrwx   1 root     root           18 Aug  8 00:35 /ncurses-5.5/lib/libncursesw.so.5 -> libncursesw.so.5.5

OK, so libncursesw is there, but not in /tools.

> SEARCH_DIR("/tools/i686-pc-linux-gnu/lib"); SEARCH_DIR("/tools/lib");

Uh oh. ld is still looking in /tools.

> attempt to open /tools/lib/gcc/i686-pc-linux-gnu/4.0.3/../../../crt1.o succeeded
> /tools/lib/gcc/i686-pc-linux-gnu/4.0.3/../../../crt1.o
> attempt to open /tools/lib/gcc/i686-pc-linux-gnu/4.0.3/../../../crti.o succeeded
> /tools/lib/gcc/i686-pc-linux-gnu/4.0.3/../../../crti.o
> attempt to open /tools/lib/gcc/i686-pc-linux-gnu/4.0.3/crtbegin.o succeeded
> /tools/lib/gcc/i686-pc-linux-gnu/4.0.3/crtbegin.o
> attempt to open /tmp/cc23jykd.o succeeded
> /tmp/cc23jykd.o
> attempt to open /tools/lib/gcc/i686-pc-linux-gnu/4.0.3/libgcc.so failed

So is gcc. Try the sanity check again, but add in -lncursesw and
you'll see it fail just like is happening for tic. Also `ldd tic'
would show this.

Looks like you missed the toolchain adjustment somehow. I imagine this
is exactly the same thing that happened to the other guy (and you in
Ch. 5). I've gotta remember this for future reference. Possible FAQ
material since it comes up from time to time.

6.02.Preparing_Virtual_Kernel_File_Systems
==========================================
lfs:~$ sudo mount -vt devpts devpts ${LFS}/dev/pts
mount: mount point /mnt/lfs/dev/pts does not exist

devpts on /mnt/lfs/dev/pts type devpts (rw)
=> ${tmpfsshmmounted}=shm on /mnt/lfs/dev/shm type tmpfs (rw)
=> "shm on /mnt/lfs/dev/shm type tmpfs (rw)" NOT found in sudo mount
mount: mount point /mnt/lfs/dev/shm does not exist
./6.02.Preparing_Virtual_Kernel_File_Systems ERROR: basic error trapped!

Exit Status $?=32

        So long and thanks for all the foo!

total_reset
============
_________________________________________________________________________________
./total_reset
The command line contains 1 argument
=> Testing for ${LFS}/lfs-logs
=> The directory /mnt/lfs/lfs-logs exists.

=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=
=ae{ WARNING! This command will totally reset the lfs system.
=ae{ The partition /dev/hdb1 will be reformatted and all files deleted.
=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=

To continue type 'yes':
Answer was "yes".
mke2fs 1.38 (30-Jun-2005)
/dev/hdb1 is apparently in use by the system; will not make a filesystem here!
./total_reset ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

Fix:
----
Review the script for:
        echo "=> If error output similar to the following occurs then check that"
        echo "=> there is no login to \${LFS} in another terminal and repeat the script."

6.30.E2fsprogs
==============
m_raid_opt: raid options: ok
m_std: standard filesystem options: ok
r_move_itable: resize2fs with resize_inode: failed
r_resize_inode: resize2fs with resize_inode: failed
78 tests succeeded      4 tests failed
make[1]: *** [check] Error 1
make[1]: Leaving directory `/e2fsprogs-1.39/build/tests'
make: *** [check-recursive] Error 1
./6.30.E2fsprogs ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

Fix:
====
Looks like toolchain adjusting problem or some
other unkown. Fix scripts for 1 or 2 pass compiling
and restart.
NOTE: 20060816 build stops at same place. Error cause is
toolchain adjustment problem.

5.07.Adjusting_The_Toolchain
============================
removed `/mnt/lfs/tools/bin/../lib/gcc/i686-pc-linux-gnu/4.0.3/include/libdevmapper.h'
removed `/mnt/lfs/tools/bin/../lib/gcc/i686-pc-linux-gnu/4.0.3/include/zutil.h'
---------->8---------->8---------->8---------->8---------->8---------->8----------
      [Requesting program interpreter: /tools/lib/ld-linux.so.2]

=> Test for correct toolchain readjustment
./5.07.Adjusting_The_Toolchain ERROR: basic error trapped!

Exit Status $?=1

        So long and thanks for all the foo!

Fix:
====
echo
echo "=> Test for correct toolchain readjustment"
programinterpreter=$(readelf -l a.out | grep ': /tools')
echo "=> \${programinterpreter}="${programinterpreter}

6.11.Binutils
=============
gcc -DHAVE_CONFIG_H -g -O2  -I.. -I../../../binutils-2.16.1/libiberty/testsuite/../../include  -o test-demangle \
        ../../../binutils-2.16.1/libiberty/testsuite/test-demangle.c ../libiberty.a
./test-demangle < ../../../binutils-2.16.1/libiberty/testsuite/demangle-expected
./test-demangle: 746 tests, 0 failures
make[2]: Leaving directory `/binutils-build/libiberty/testsuite'
make[1]: Leaving directory `/binutils-build/libiberty'
=> ${errorcount}=14 counts of ERROR:
=>DONE ./6.11.Binutils
Exit Status ${?}=1

        So long and thanks for all the foo!

./lfs-scripts/_Ch6_Build ERROR: basic error trapped!

Fix:
====
NOTE: The binutils-check-log in $LFS/lfs-logs contains
the following:

Running target unix
Using /tools/share/dejagnu/baseboards/unix.exp as board description file for target.
Using /tools/share/dejagnu/config/unix.exp as generic interface file for target.
Using /binutils-2.16.1/gas/testsuite/config/default.exp as tool-and-target-specific interface file.
Running /binutils-2.16.1/gas/testsuite/gas/all/gas.exp ...
ERROR: Can't run gas/all/comment.s: The system has no more ptys.  Ask your system administrator to create more.
ERROR: timeout

A reboot will fix the ptys problem, but the question is
why it happens and how to do it without a reboot.

Ref: https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=204639

------- Additional Comments From jakub@redhat.com  2006-08-30 11:52 EST 
-------
Why do you report LFS related bugs here?
This is a user error, you probably don't have /dev/pts filesystem 
mounted.

Ref: http://www.assortedinternet.com/support/?_a=knowledgebase&_j=questiondetails&_i=58

You should see something like this, the permissions should be exactly as shown:

-rwsr-xr-x 1 root root 33738 Oct 21 21:35 /usr/libexec/pt_chown

If the permissions are not exactly as shown above, run the following command to fix them:

chmod 4755 /usr/libexec/pt_chown

This should resolve the 'The system has no more ptys. Ask your system administrator to create more.' errors on the server. 

NOTE: For LFS two files are found:

lfs:~/lfs-scripts$ sudo find $LFS -name pt_chown
/mnt/lfs/tools/libexec/pt_chown
/mnt/lfs/usr/lib/glibc/pt_chown

lfs:~$ ls -l /mnt/lfs/tools/libexec/pt_chown
-rw------- 1 root root 23542 Aug 29 23:21 /mnt/lfs/tools/libexec/pt_chown
lfs:~$

The one in glibc will be picked up after the tool chain
adjustment as shown by:

lfs:~/lfs-scripts$ ./_Ch6_Sanity_Test /dev/hdb1 1
=> ${LFS}=/mnt/lfs

...
_________________________________________________________________________________
./6.04.ae1.Entering_The_Chroot_Testing
=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae
=ae{ The ${LFS} variable must be exported to be visible to the subshells
=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae

----------8<----------8<----------8<----------8<----------8<----------8<----------
=> ./6.04.ae1.Entering_The_Chroot_Testing TERM=xterm LC_ALL=POSIX LFS=/mnt/lfs PATH=/tools/bin:/bin:/usr/bin PWD=/home/lfs/lfs-scripts SHLVL=2 HOME=/home/lfs

root:/# echo ${PATH}
/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin
root:/#

so test this solution by including

chmod 4755 ${LFS}/usr/lib/glibc/pt_chown

before the make check of binutils.
NOTE: It does not work. See below for possible solution.

Ref: http://www.linuxfromscratch.org//lfs/faq.html#no-ptys

root:/# expect -c "spawn ls"
spawn ls
The system has no more ptys.  Ask your system administrator to create more.
    while executing
"spawn ls"
root:/# chmod 4755 /usr/lib/glibc/pt_chown
root:/# ls -l  /usr/lib/glibc/pt_chown
-rwsr-xr-x 1 root root 23412 Aug 30 04:17 /usr/lib/glibc/pt_chown
root:/# expect -c "spawn ls"
spawn ls
The system has no more ptys.  Ask your system administrator to create more.
    while executing
"spawn ls"
root:/# ls -l /tools/libexec/pt_chown
-rw------- 1 root root 23542 Aug 29 23:21 /tools/libexec/pt_chown
root:/# chmod 4755 /tools/libexec/pt_chown
root:/# ls -l /tools/libexec/pt_chown
-rwsr-xr-x 1 root root 23542 Aug 29 23:21 /tools/libexec/pt_chown
root:/# expect -c "spawn ls"
spawn ls
The system has no more ptys.  Ask your system administrator to create more.
    while executing
"spawn ls"
root:/# ls /dev
console  null  pts  shm
root:/# mknod /dev/ptmx c 5 2
root:/# chmod 666 /dev/ptmx
root:/# ls -l /dev/ptmx
crw-rw-rw- 1 root root 5, 2 Aug 30 22:59 /dev/ptmx
root:/# expect -c "spawn ls"
spawn ls
root:/# mount
root:/# ls /dev
console  null  ptmx  pts  shm
root:/# rm /dev/ptmx
root:/# expect -c "spawn ls"
spawn ls
The system has no more ptys.  Ask your system administrator to create more.
    while executing
"spawn ls"
root:/#
 
Verify this by adding a test in 6.02* then
use _Ch6_Sanity_Test

NOTE: This did not fix the problem and the build still
failed with ERROR: count = 14. See binutils-check-log.20060831
Try with reformat and start from scratch again and
see if the process will work without a reboot.

6.02*
====
Ref: http://linuxfromscratch.org/pipermail/lfs-support/2006-July/031078.html

In Ch5 the mount status is:

lfs:~/lfs-scripts$ cat /proc/mounts
rootfs / rootfs rw 0 0
/dev/root / ext3 rw,data=ordered 0 0
/dev /dev tmpfs rw 0 0
/proc /proc proc rw 0 0
/sys /sys sysfs rw 0 0
/proc/bus/usb /proc/bus/usb usbfs rw 0 0
devpts /dev/pts devpts rw 0 0
/dev/hda1 /boot ext3 rw,data=ordered 0 0
tmpfs /dev/shm tmpfs rw 0 0
/dev/hdb2 /home ext3 rw,data=ordered 0 0
/dev/hdb3 /opt ext3 rw,data=ordered 0 0
none /proc/sys/fs/binfmt_misc binfmt_misc rw 0 0
automount(pid1528) /net autofs rw,fd=4,pgrp=1528,timeout=60,minproto=2,maxproto=4,indirect 0 0
/dev/hdb1 /mnt/lfs ext3 rw,data=ordered 0 0
lfs:~/lfs-scripts$

After 6.02* the mount status is:

lfs:~/lfs-scripts$ cat /proc/mounts
rootfs / rootfs rw 0 0
/dev/root / ext3 rw,data=ordered 0 0
/dev /dev tmpfs rw 0 0
/proc /proc proc rw 0 0
/sys /sys sysfs rw 0 0
/proc/bus/usb /proc/bus/usb usbfs rw 0 0
devpts /dev/pts devpts rw 0 0
/dev/hda1 /boot ext3 rw,data=ordered 0 0
tmpfs /dev/shm tmpfs rw 0 0
/dev/hdb2 /home ext3 rw,data=ordered 0 0
/dev/hdb3 /opt ext3 rw,data=ordered 0 0
none /proc/sys/fs/binfmt_misc binfmt_misc rw 0 0
automount(pid1528) /net autofs rw,fd=4,pgrp=1528,timeout=60,minproto=2,maxproto=4,indirect 0 0
/dev/hdb1 /mnt/lfs ext3 rw,data=ordered 0 0
/dev /mnt/lfs/dev tmpfs rw 0 0
devpts /mnt/lfs/dev/pts devpts rw 0 0
shm /mnt/lfs/dev/shm tmpfs rw 0 0
proc /mnt/lfs/proc proc rw 0 0
sysfs /mnt/lfs/sys sysfs rw 0 0
lfs:~/lfs-scripts$

After total_reset the mount status is:

Writing superblocks and filesystem accounting information: done

This filesystem will be automatically checked every 38 mounts or
180 days, whichever comes first.  Use tune2fs -c or -i to override.
Filesystem            Size  Used Avail Use% Mounted on
/dev/hda3              12G  5.3G  5.5G  50% /
/dev/hda1              99M   17M   77M  19% /boot
tmpfs                 232M     0  232M   0% /dev/shm
/dev/hdb2             9.5G 1000M  8.0G  11% /home
/dev/hdb3              18G  386M   16G   3% /opt
df: `/mnt/lfs/dev/pts': No such file or directory
df: `/mnt/lfs/dev/shm': No such file or directory
df: `/mnt/lfs/sys': No such file or directory
./total_reset ERROR: basic error trapped!

Exit Status ${?}=1

        So long and thanks for all the foo!

lfs:~/lfs-scripts$ cat /proc/mounts
rootfs / rootfs rw 0 0
/dev/root / ext3 rw,data=ordered 0 0
/dev /dev tmpfs rw 0 0
/proc /proc proc rw 0 0
/sys /sys sysfs rw 0 0
/proc/bus/usb /proc/bus/usb usbfs rw 0 0
devpts /dev/pts devpts rw 0 0
/dev/hda1 /boot ext3 rw,data=ordered 0 0
tmpfs /dev/shm tmpfs rw 0 0
/dev/hdb2 /home ext3 rw,data=ordered 0 0
/dev/hdb3 /opt ext3 rw,data=ordered 0 0
none /proc/sys/fs/binfmt_misc binfmt_misc rw 0 0
automount(pid1528) /net autofs rw,fd=4,pgrp=1528,timeout=60,minproto=2,maxproto=4,indirect 0 0
lfs:~/lfs-scripts$

6.11.Binutils
=============
./test-demangle < ../../../binutils-2.16.1/libiberty/testsuite/demangle-expected
./test-demangle: 746 tests, 0 failures
make[2]: Leaving directory `/binutils-build/libiberty/testsuite'
make[1]: Leaving directory `/binutils-build/libiberty'
./6.11.Binutils ERROR: basic error trapped!

Exit Status ${?}=1

        So long and thanks for all the foo!

NOTE: The binutils check passed with a good log file.
This test is from binutils-check-log.20060831-2.pass
and was run using ssh on a cygwin terminal from home.
Maybe that was the problem?
Redo from scratch on the machine - after a reboot!

Added debug messages and ran again:

gcc -DHAVE_CONFIG_H -g -O2  -I.. -I../../../binutils-2.16.1/libiberty/testsuite/../../include  -o test-demangle \
        ../../../binutils-2.16.1/libiberty/testsuite/test-demangle.c ../libiberty.a
./test-demangle < ../../../binutils-2.16.1/libiberty/testsuite/demangle-expected
./test-demangle: 746 tests, 0 failures
make[2]: Leaving directory `/binutils-build/libiberty/testsuite'
make[1]: Leaving directory `/binutils-build/libiberty'
=> Debug 3
=> Debug 4
=> Debug 5
./6.11.Binutils ERROR: basic error trapped!

Exit Status ${?}=1

        So long and thanks for all the foo!

Fix:
====
# Check for ERROR:
echo "=> Debug 6"
ls -l binutils-check-log
echo "=> "`whoami`
set +e
# NOTE: Both the errorcount test examples work. When there is
# no errorcount this test causes a basic error in the script
# so error checking is turned off here using set +e and set -e
#errorcount="$(grep -c 'ERROR:' /lfs-logs/binutils-check-log)"
errorcount=`grep -c "ERROR:" /lfs-logs/binutils-check-log`
set -e
echo "=> Debug 7"
if [[ "${errorcount}" -eq 0 ]] ; then

6.11.Binutils
=============
_________________________________________________________________________________
./6.11.Binutils
=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae
=ae{ PTYs are most commonly implemented via the devpts file system.
=ae{ Check to see if the host system is set up correctly in this regard by
=ae{ performing a quick test:
=ae{         expect -c spawn ls
=ae{ The response might be:
=ae{         The system has no more ptys.
=ae{         Ask your system administrator to create more.
=ae{ If the above message is seen, the host does not have PTYs set up properly.
=ae{ There is no point in running the test suites for GCC and Binutils until
=ae{ this issue is resolved. Please consult the LFS FAQ at:
=ae{         http://www.linuxfromscratch.org/lfs/faq.html#no-ptys
=ae{ for more information on how to get PTYs working.
=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae

spawn ls
/
binutils-2.16.1 bz2
./6.11.Binutils: line 39: Copy: command not found
./6.11.Binutils ERROR: basic error trapped!

Exit Status ${?}=1

        So long and thanks for all the foo!

./lfs-scripts/_Ch6_Build ERROR: basic error trapped!

Exit Status ${?}=1

        So long and thanks for all the foo!

./6.04.Entering_The_Chroot_Environment ERROR: basic error trapped!

Exit Status ${?}=1

        So long and thanks for all the foo!

Fix:
====
The # was missing from the following line:

# Copy the source files and unpack

6.60.Cleaning_Up
================
=>A: ${0}=./6.60.Cleaning_Up    ${1}=/dev/hdb1    ${2}=1
The command line contains 2 arguments
=>B: ./6.60.Cleaning_Up    /dev/hdb1    1
=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae
=ae{ The /tools directory is intentionally NOT deleted at this time!
=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae

----------8<----------8<----------8<----------8<----------8<----------8<----------
=> ./6.60.Cleaning_Up TERM=xterm LC_ALL=POSIX LFS=/mnt/lfs PATH=/tools/bin:/bin:/usr/bin PWD=/home/lfs/lfs-scripts HOME=/home/lfs SHLVL=3
chroot: cannot run command `/usr/bin/env': No such file or directory
./6.60.Cleaning_Up ERROR: basic error trapped!

Exit Status ${?}=1

        So long and thanks for all the foo!

Fix:
====
lfs:/mnt/lfs/lfs-logs$ grep "basic error trapped" *
5.13.Ncurses:./5.13.Ncurses ERROR: basic error trapped!
5.29.Texinfo:./5.29.Texinfo ERROR: basic error trapped!
5.30.Util-Linux:./5.30.Util-linux ERROR: basic error trapped!
lfs:/mnt/lfs/lfs-logs$ cat 5.13*
=> pwd=/mnt/lfs/lfs-scripts
=> pwd=/mnt/lfs/sources

_________________________________________________________________________________
./5.13.Ncurses
/home/lfs
ncurses-5.5 gz
gunzip: ncurses-5.5.tar.gz: No such file or directory
./5.13.Ncurses ERROR: basic error trapped!

Exit Status ${?}=1

        So long and thanks for all the foo!

lfs:/mnt/lfs/lfs-logs$

NOTE: Error not trapped - probably because ${PIPESTATUS} was used.
Fix the error scripts and test again.

6.27.Bash
=========
run-posixpat
run-precedence
run-printf
run-quote
run-read
warning: please do not consider output differing only in the amount of
warning: white space to be an error.
40c40
< ./read2.sub: line 13: /dev/tty: No such device or address
---
> ./read2.sub: line 13: read: -3: invalid timeout specification
62c62
<       0       0       0
---
>        0       0       0

Fix:
====
Ref: LFS support email list Sept 2006
also
http://www.kuro5hin.org/story/2004/3/9/16838/14935
on the use of screen


