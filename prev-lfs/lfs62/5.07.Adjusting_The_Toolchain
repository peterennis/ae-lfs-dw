#!/bin/bash
# The proper way to start a bash script

cd ${LFS}/lfs-scripts
echo "=> pwd="`pwd`

set -e -u -x
source ./aeSCRIPT_LIBRARY
trap simple_error ERR

echo
echo _________________________________________________________________________________
echo ${0}
DateAndTime=$(date +%Y_%m_%d_%T)
echo ${DateAndTime}" "${0}" Start $(pwd)" >> ${LFS}/lfs-logs/logSBU
echo =ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae
echo =ae{ IMPORTANT
echo =ae{ If working on a platform where the name of the dynamic linker is something
echo =ae{ other than ld-linux.so.2, replace \<ld-linux.so.2\> with the name of the
echo =ae{ platform\'s dynamic linker in the above commands. Refer back to Section 5.2,
echo =ae{ Toolchain Technical Notes, if necessary.
echo =ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae
echo

echo "=> "${0}" "`exec env`
ldadjusted=/tools/bin/ld-5.07.Adjusting_The_Toolchain
echo "=> \${ldadjusted}="${ldadjusted}
if [[ -e ${ldadjusted} ]] ; then
	echo "=> The file "${ldadjusted}" exists."
	rm /tools/bin/ld
	rm /tools/$(gcc -dumpmachine)/bin/ld
	cp -uv /tools/bin/ld-5.03.Binutils /tools/bin/ld
	ln -sv /tools/bin/ld /tools/$(gcc -dumpmachine)/bin/ld
	echo "=> "`ls -l /tools/bin/ld`
	echo "=> "`ls -l /tools/$(gcc -dumpmachine)/bin/ld`

	SPECFILE=`dirname $(gcc -print-libgcc-file-name)`/specs &&
	gcc -dumpspecs > $SPECFILE &&
	sed 's@^/lib/ld-linux.so.2@/tools&@g' $SPECFILE > tempspecfile &&
	mv -vf tempspecfile $SPECFILE &&
	unset SPECFILE

	GCC_INCLUDEDIR=`dirname $(gcc -print-libgcc-file-name)`/include &&
	find ${GCC_INCLUDEDIR}/* -maxdepth 0 -xtype d -exec rm -rvf '{}' \; &&
	rm -vf `grep -l "DO NOT EDIT THIS FILE" ${GCC_INCLUDEDIR}/*` &&
	unset GCC_INCLUDEDIR
else
	echo ----------8\<----------8\<----------8\<----------8\<----------8\<----------8\<----------
	mv -v /tools/bin/{ld,ld-5.07.Adjusting_The_Toolchain}
	mv -v /tools/$(gcc -dumpmachine)/bin/{ld,ld-5.07.Adjusting_The_Toolchain}
	cp -uv /tools/bin/ld-5.03.Binutils /tools/bin/ld
	ln -sv /tools/bin/ld /tools/$(gcc -dumpmachine)/bin/ld

	SPECFILE=`dirname $(gcc -print-libgcc-file-name)`/specs &&
	gcc -dumpspecs > $SPECFILE &&
	sed 's@^/lib/ld-linux.so.2@/tools&@g' $SPECFILE > tempspecfile &&
	mv -vf tempspecfile $SPECFILE &&
	unset SPECFILE

	GCC_INCLUDEDIR=`dirname $(gcc -print-libgcc-file-name)`/include &&
	find ${GCC_INCLUDEDIR}/* -maxdepth 0 -xtype d -exec rm -rvf '{}' \; &&
	rm -vf `grep -l "DO NOT EDIT THIS FILE" ${GCC_INCLUDEDIR}/*` &&
	unset GCC_INCLUDEDIR
	echo ----------\>8----------\>8----------\>8----------\>8----------\>8----------\>8----------
fi

echo 'main(){}' > dummy.c
cc dummy.c
readelf -l a.out | grep ': /tools'

echo
echo "=> Test for correct toolchain readjustment"
programinterpreter=$(readelf -l a.out | grep ': /tools')
echo "=> \${programinterpreter}="${programinterpreter}
if echo "${programinterpreter}" | grep -q "[Requesting program interpreter: /tools/lib/ld-linux.so.2]" ; then
        echo "=> ${programinterpreter} - FOUND"
else
        echo "=> ${programinterpreter} - NOT FOUND - ERROR!"
        exit 1
fi

echo
echo =ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae
echo =ae{ CAUTION
echo =ae{ If everything is working correctly, there should be no errors,
echo =ae{ and the output of the last command will be of the form:
echo =ae{ "        [Requesting program interpreter: /tools/lib/ld-linux.so.2]"
echo =ae{ Note that /tools/lib appears as the prefix of the dynamic linker.
echo =ae{ If the output is not shown as above or there was no output at all,
echo =ae{ then something is wrong.
echo =ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae
echo

rm -v dummy.c a.out

echo
echo =ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae
echo =ae{ This is a reliable test to see what ld \(the dynamic loader from binutils
echo =ae{ as opposed to the dynamic linker from glibc, ld-linux.so.2\) is doing.
echo =ae{ "        "\`\$\(gcc -print-prog-name=ld\) --verbose \| grep 'SEARCH'\`
echo =ae{ and it should show output limilar to the following:
echo =ae{ "        "SEARCH_DIR\(\"/tools/i686-pc-linux-gnu/lib\"\)\;" "SEARCH_DIR\(\"/tools/lib\"\)\;
echo =ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae=ae
echo
echo `$(gcc -print-prog-name=ld) --verbose | grep SEARCH`
DateAndTime=$(date +%Y_%m_%d_%T)
echo ${DateAndTime}" "${0}" End $(pwd)" >> ${LFS}/lfs-logs/logSBU
echo "=>DONE "${0}
echo
