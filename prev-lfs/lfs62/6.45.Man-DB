#!/bin/bash
# The proper way to start a bash script

set -e -u -x
source ./aeSCRIPT_LIBRARY
trap simple_error ERR

cd /sources
echo "=> pwd="`pwd`

echo
echo _________________________________________________________________________________
echo ${0}
DateAndTime=$(date +%Y_%m_%d_%T)
echo ${DateAndTime}" "${0}" Start $(pwd)" >> /lfs-logs/logSBU

# Set variables for the package name and type
PkgName=man-db-2.4.3
PkgType=gz
echo ${PkgName}" "${PkgType}

# unpack
if [[ "${PkgType}" == "gz" ]] ; then
        gzip -cd ${PkgName}.tar.gz | tar xvf -
elif [[ "${PkgType}" == "bz2" ]] ; then
	bzip2 -cd ${PkgName}.tar.bz2 | tar xvf -
fi

# Configure and install
cd ${PkgName}
echo "=> pwd="`pwd`
echo ----------8\<----------8\<----------8\<----------8\<----------8\<----------8\<----------
echo "=> "${0}" "`exec env`
# Change the location of translated manual pages that come with Man-DB
# in order for them to be accessible in both traditional and UTF-8 locales:
mv man/de{_DE.88591,} &&
mv man/es{_ES.88591,} &&
mv man/it{_IT.88591,} &&
mv man/ja{_JP.eucJP,} &&
sed -i 's,\*_\*,??,' man/Makefile.in
# Sed substitution to delete the /usr/man lines in the man_db.conf file to prevent
# redundant results when using programs such as whatis:
sed -i '/\t\/usr\/man/d' src/man_db.conf.in
# Change accounts for programs that Man-DB should be able to find at runtime,
# but that have not been installed yet:
cat >>include/manconfig.h.in <<"EOF"
#define WEB_BROWSER "exec /usr/bin/lynx"
#define COL "/usr/bin/col"
#define VGRIND "/usr/bin/vgrind"
#define GRAP "/usr/bin/grap"
EOF
./configure --prefix=/usr --enable-mb-groff --disable-setuid
make
# This package does not come with a test suite
make install
# Fix for UTF man pages
cat >>convert-mans <<"EOF"
#!/bin/sh -e
FROM="${1}"
TO="${2}"
shift ; shift
while [ ${#} -gt 0 ]
do
        FILE="${1}"
        shift
        iconv -f "${FROM}" -t "${TO}" "${FILE}" >.tmp.iconv
        mv .tmp.iconv "${FILE}"
done
EOF
install -m755 convert-mans  /usr/bin
echo ----------\>8----------\>8----------\>8----------\>8----------\>8----------\>8----------

# Remove the extracted source files and the compile directory
echo
cd /sources
echo "=> pwd="`pwd`
rm -rf ${PkgName}
echo "=> Removed directory "${PkgName}

DateAndTime=$(date +%Y_%m_%d_%T)
echo ${DateAndTime}" "${0}" End $(pwd)" >> /lfs-logs/logSBU
echo "=>DONE "${0}
echo
